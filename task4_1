// Даны два Deque, представляющие два целых числа. Цифры хранятся в обратном порядке и каждый из их узлов содержит одну цифру.
// 1) Умножьте два числа и верните произведение в виде связанного списка.
// 2) Сложите два числа и верните сумму в виде связанного списка. Одно или два числа должны быть отрицательными.

public ListNode multiply(Deque<Integer> num1, Deque<Integer> num2) {
    if (num1.isEmpty() || num2.isEmpty()) {
        return null;
    }
    int m = num1.size();
    int n = num2.size();
    int[] result = new int[m + n];
    int index = result.length - 1;
    while (!num1.isEmpty()) {
        int i = index;
        int carry = 0;
        int digit1 = num1.removeLast();
        Deque<Integer> tempNum2 = new LinkedList<>(num2);
        while (!tempNum2.isEmpty()) {
            int digit2 = tempNum2.removeLast();
            int product = digit1 * digit2 + carry + result[i];
            result[i] = product % 10;
            carry = product / 10;
            i--;
        }
        if (carry != 0) {
            result[i] += carry;
        }
        index--;
    }
    ListNode head = new ListNode(result[0]);
    ListNode curr = head;
    for (int i = 1; i < result.length; i++) {
        curr.next = new ListNode(result[i]);
        curr = curr.next;
    }
    return head;
}
